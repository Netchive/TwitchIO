name: Build

permissions:
  contents: read
  pages: write
  id-token: write

# Allow one concurrent deployment
concurrency:
  group: "pages"
  cancel-in-progress: true

on:
  push:
  pull_request:
    types: [opened, edited, synchronize]

jobs:
  lib:
    runs-on: ubuntu-latest
    strategy:
      fail-fast: false
      matrix:
        python-version: ["3.8", "3.9", "3.10"]

    steps:
      - name: Checkout
        uses: actions/checkout@v2
        with:
          fetch-depth: 0

      - name: Install CPython
        uses: actions/setup-python@v2
        with:
          python-version: ${{matrix.python-version}}

      - name: Install Deps
        run: |
          python -m ensurepip
          pip install wheel setuptools
          pip install -r requirements.txt

      - name: Build
        run: python setup.py sdist bdist_wheel

  docs:
    environment:
      name: github-pages
      url: ${{ steps.deployment.outputs.page_url }}
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v2
        with:
          fetch-depth: 0
      - name: Install CPython
        uses: actions/setup-python@v2
        with:
          python-version: 3.x
      - name: Setup Pages
        uses: actions/configure-pages@v2
      - name: Install Deps
        run: |
          sudo apt update
          sudo apt install -y libasound-dev portaudio19-dev libportaudio2 libportaudiocpp0
          python -m ensurepip
          pip install -r docs/requirements.txt
          pip install -r requirements.txt

      - name: Build Docs
        run: |
          cd docs
          make html
      - name: Upload artifact
        uses: actions/upload-pages-artifact@v1
        with:
          # Upload entire repository
          path: 'docs/_build/html'
      - name: Deploy to GitHub Pages
        id: deployment
        uses: actions/deploy-pages@v1

  lint:
    runs-on: ubuntu-latest
    steps:
    - name: checkout
      uses: actions/checkout@v2

    - name: Setup Python
      uses: actions/setup-python@v2
      with:
        python-version: 3.8

    - name: install black
      run: |
        python -m ensurepip
        pip install black

    - name: run linter
      run: |
        black twitchio --line-length 120 --verbose --check
